plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "Ladysnake Libs"
		url = "https://ladysnake.jfrog.io/artifactory/mods"
	}
	maven { url = "https://jitpack.io" }
	maven { url = "https://www.cursemaven.com" }
	maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
	maven {
    name = "Progwml6 maven"
    url = "https://dvs1.progwml6.com/files/maven/"
  }
  maven {
    name = "ModMaven"
    url = "https://modmaven.dev"
  }
  maven { url "https://maven.shedaniel.me/" }
}


dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation("com.github.Chocohead:Fabric-ASM:v2.3") {
		exclude (group: "net.fabricmc.fabric-api")
	}
	include "com.github.Chocohead:Fabric-ASM:v2.3"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// REI
	modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:$rei_version"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:$rei_version"
  	modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:$rei_version"

	// Trinkets
	modImplementation "dev.emi:trinkets:${trinkets_version}" 

	// Geckolib
	modImplementation "software.bernie.geckolib:geckolib-fabric-${geckolib_version}"

	// Dev Runtime
	modLocalRuntime "com.terraformersmc:modmenu:${project.mod_menu_version}"
}

loom {
	accessWidenerPath = file("src/main/resources/cataclysm.accesswidener")
	runs {
        // This adds a new gradle task that runs the datagen API: "gradlew runDatagen"
        datagen {
            inherit server
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=cataclysm"
 
            runDir "build/datagen"
        }
    }
}

sourceSets {
    main {
        resources {
            srcDirs += [
                    'src/main/generated'
            ]
        }
    }
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
